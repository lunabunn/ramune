#[derive(Clone, Copy)]
pub struct Color {
    pub(crate) r: f32,
    pub(crate) g: f32,
    pub(crate) b: f32,
    pub(crate) a: f32,
}

macro_rules! color_consts {
    ($($name:ident : $value:literal),* $(,)?) => {
        impl Color {
            $(pub const $name: Self = Self::from_rgb_hex($value);)*
        }
    };
}

color_consts! {
    // ALICE_BLUE: 0xf0f8ff,
    // ANTIQUE_WHITE: 0xfaebd7,
    // AQUA: 0x00ffff,
    // AQUAMARINE: 0x7fffd4,
    // AZURE: 0xf0ffff,
    // BEIGE: 0xf5f5dc,
    // BISQUE: 0xffe4c4,
    // BLACK: 0x000000,
    // BLANCHED_ALMOND: 0xffebcd,
    // BLUE: 0x0000ff,
    // BLUE_VIOLET: 0x8a2be2,
    // BROWN: 0xa52a2a,
    // BURLY_WOOD: 0xdeb887,
    // CADET_BLUE: 0x5f9ea0,
    // CHARTREUSE: 0x7fff00,
    // CHOCOLATE: 0xd2691e,
    // CORAL: 0xff7f50,
    CORNFLOWER_BLUE: 0x6495ed,
    // CORNSILK: 0xfff8dc,
    // CRIMSON: 0xdc143c,
    // CYAN: 0x00ffff,
    // DARK_BLUE: 0x00008b,
    // DARK_CYAN: 0x008b8b,
    // DARK_GOLDEN_ROD: 0xb8860b,
    // DARK_GRAY: 0xa9a9a9,
    // DARK_GREY: 0xa9a9a9,
    // DARK_GREEN: 0x006400,
    // DARK_KHAKI: 0xbdb76b,
    // DARK_MAGENTA: 0x8b008b,
    // DARK_OLIVE_GREEN: 0x556b2f,
    // DARK_ORANGE: 0xff8c00,
    // DARK_ORCHID: 0x9932cc,
    // DARK_RED: 0x8b0000,
    // DARK_SALMON: 0xe9967a,
    // DARK_SEA_GREEN: 0x8fbc8f,
    // DARK_SLATE_BLUE: 0x483d8b,
    // DARK_SLATE_GRAY: 0x2f4f4f,
    // DARK_SLATE_GREY: 0x2f4f4f,
    // DARK_TURQUOISE: 0x00ced1,
    // DARK_VIOLET: 0x9400d3,
    // DEEP_PINK: 0xff1493,
    // DEEP_SKY_BLUE: 0x00bfff,
    // DIM_GRAY: 0x696969,
    // DIM_GREY: 0x696969,
    // DODGER_BLUE: 0x1e90ff,
    // FIRE_BRICK: 0xb22222,
    // FLORAL_WHITE: 0xfffaf0,
    // FOREST_GREEN: 0x228b22,
    // FUCHSIA: 0xff00ff,
    // GAINSBORO: 0xdcdcdc,
    // GHOST_WHITE: 0xf8f8ff,
    // GOLD: 0xffd700,
    // GOLDEN_ROD: 0xdaa520,
    // GRAY: 0x808080,
    // GREY: 0x808080,
    // GREEN: 0x008000,
    // GREEN_YELLOW: 0xadff2f,
    // HONEY_DEW: 0xf0fff0,
    // HOT_PINK: 0xff69b4,
    // INDIAN_RED: 0xcd5c5c,
    // INDIGO: 0x4b0082,
    // IVORY: 0xfffff0,
    // KHAKI: 0xf0e68c,
    // LAVENDER: 0xe6e6fa,
    // LAVENDER_BLUSH: 0xfff0f5,
    // LAWN_GREEN: 0x7cfc00,
    // LEMON_CHIFFON: 0xfffacd,
    // LIGHT_BLUE: 0xadd8e6,
    // LIGHT_CORAL: 0xf08080,
    // LIGHT_CYAN: 0xe0ffff,
    // LIGHT_GOLDEN_RODYELLOW: 0xfafad2,
    // LIGHT_GRAY: 0xd3d3d3,
    // LIGHT_GREY: 0xd3d3d3,
    // LIGHT_GREEN: 0x90ee90,
    // LIGHT_PINK: 0xffb6c1,
    // LIGHT_SALMON: 0xffa07a,
    // LIGHT_SEA_GREEN: 0x20b2aa,
    // LIGHT_SKY_BLUE: 0x87cefa,
    // LIGHT_SLATE_GRAY: 0x778899,
    // LIGHT_SLATE_GREY: 0x778899,
    // LIGHT_STEEL_BLUE: 0xb0c4de,
    // LIGHT_YELLOW: 0xffffe0,
    // LIME: 0x00ff00,
    // LIME_GREEN: 0x32cd32,
    // LINEN: 0xfaf0e6,
    // MAGENTA: 0xff00ff,
    // MAROON: 0x800000,
    // MEDIUM_AQUA_MARINE: 0x66cdaa,
    // MEDIUM_BLUE: 0x0000cd,
    // MEDIUM_ORCHID: 0xba55d3,
    // MEDIUM_PURPLE: 0x9370db,
    // MEDIUM_SEA_GREEN: 0x3cb371,
    // MEDIUM_SLATE_BLUE: 0x7b68ee,
    // MEDIUM_SPRING_GREEN: 0x00fa9a,
    // MEDIUM_TURQUOISE: 0x48d1cc,
    // MEDIUM_VIOLET_RED: 0xc71585,
    // MIDNIGHT_BLUE: 0x191970,
    // MINT_CREAM: 0xf5fffa,
    // MISTY_ROSE: 0xffe4e1,
    // MOCCASIN: 0xffe4b5,
    // NAVAJO_WHITE: 0xffdead,
    // NAVY: 0x000080,
    // OLD_LACE: 0xfdf5e6,
    // OLIVE: 0x808000,
    // OLIVE_DRAB: 0x6b8e23,
    // ORANGE: 0xffa500,
    // ORANGE_RED: 0xff4500,
    // ORCHID: 0xda70d6,
    // PALE_GOLDEN_ROD: 0xeee8aa,
    // PALE_GREEN: 0x98fb98,
    // PALE_TURQUOISE: 0xafeeee,
    // PALE_VIOLET_RED: 0xdb7093,
    // PAPAYA_WHIP: 0xffefd5,
    // PEACH_PUFF: 0xffdab9,
    // PERU: 0xcd853f,
    // PINK: 0xffc0cb,
    // PLUM: 0xdda0dd,
    // POWDER_BLUE: 0xb0e0e6,
    // PURPLE: 0x800080,
    // REBECCA_PURPLE: 0x663399,
    // RED: 0xff0000,
    // ROSY_BROWN: 0xbc8f8f,
    // ROYAL_BLUE: 0x4169e1,
    // SADDLE_BROWN: 0x8b4513,
    // SALMON: 0xfa8072,
    // SANDY_BROWN: 0xf4a460,
    // SEA_GREEN: 0x2e8b57,
    // SEA_SHELL: 0xfff5ee,
    // SIENNA: 0xa0522d,
    // SILVER: 0xc0c0c0,
    // SKY_BLUE: 0x87ceeb,
    // SLATE_BLUE: 0x6a5acd,
    // SLATE_GRAY: 0x708090,
    // SLATE_GREY: 0x708090,
    // SNOW: 0xfffafa,
    // SPRING_GREEN: 0x00ff7f,
    // STEEL_BLUE: 0x4682b4,
    // TAN: 0xd2b48c,
    // TEAL: 0x008080,
    // THISTLE: 0xd8bfd8,
    // TOMATO: 0xff6347,
    // TURQUOISE: 0x40e0d0,
    // VIOLET: 0xee82ee,
    // WHEAT: 0xf5deb3,
    WHITE: 0xffffff,
    // WHITE_SMOKE: 0xf5f5f5,
    // YELLOW: 0xffff00,
    // YELLOW_GREEN: 0x9acd32,
}

#[rustfmt::skip]
// const SRGB_BYTE_TO_RGB_FLOAT: [f32; 256] = [0., 0.00392156862745098, 0.00784313725490196, 0.011764705882352941, 0.01568627450980392, 0.0196078431372549, 0.023529411764705882, 0.027450980392156862, 0.03137254901960784, 0.03529411764705882, 0.0392156862745098, 0.043137254901960784, 0.047058823529411764, 0.050980392156862744, 0.054901960784313725, 0.058823529411764705, 0.06274509803921569, 0.06666666666666667, 0.07058823529411765, 0.07450980392156863, 0.0784313725490196, 0.08235294117647059, 0.08627450980392157, 0.09019607843137255, 0.09411764705882353, 0.09803921568627451, 0.10196078431372549, 0.10588235294117647, 0.10980392156862745, 0.11372549019607843, 0.11764705882352941, 0.12156862745098039, 0.12549019607843137, 0.12941176470588237, 0.13333333333333333, 0.13725490196078433, 0.1411764705882353, 0.1450980392156863, 0.14901960784313725, 0.15294117647058825, 0.1568627450980392, 0.1607843137254902, 0.16470588235294117, 0.16862745098039217, 0.17254901960784313, 0.17647058823529413, 0.1803921568627451, 0.1843137254901961, 0.18823529411764706, 0.19215686274509805, 0.19607843137254902, 0.2, 0.20392156862745098, 0.20784313725490197, 0.21176470588235294, 0.21568627450980393, 0.2196078431372549, 0.2235294117647059, 0.22745098039215686, 0.23137254901960785, 0.23529411764705882, 0.23921568627450981, 0.24313725490196078, 0.24705882352941178, 0.25098039215686274, 0.2549019607843137, 0.25882352941176473, 0.2627450980392157, 0.26666666666666666, 0.27058823529411763, 0.27450980392156865, 0.2784313725490196, 0.2823529411764706, 0.28627450980392155, 0.2901960784313726, 0.29411764705882354, 0.2980392156862745, 0.30196078431372547, 0.3058823529411765, 0.30980392156862746, 0.3137254901960784, 0.3176470588235294, 0.3215686274509804, 0.3254901960784314, 0.32941176470588235, 0.3333333333333333, 0.33725490196078434, 0.3411764705882353, 0.34509803921568627, 0.34901960784313724, 0.35294117647058826, 0.3568627450980392, 0.3607843137254902, 0.36470588235294116, 0.3686274509803922, 0.37254901960784315, 0.3764705882352941, 0.3803921568627451, 0.3843137254901961, 0.38823529411764707, 0.39215686274509803, 0.396078431372549, 0.4, 0.403921568627451, 0.40784313725490196, 0.4117647058823529, 0.41568627450980394, 0.4196078431372549, 0.4235294117647059, 0.42745098039215684, 0.43137254901960786, 0.43529411764705883, 0.4392156862745098, 0.44313725490196076, 0.4470588235294118, 0.45098039215686275, 0.4549019607843137, 0.4588235294117647, 0.4627450980392157, 0.4666666666666667, 0.47058823529411764, 0.4745098039215686, 0.47843137254901963, 0.4823529411764706, 0.48627450980392156, 0.49019607843137253, 0.49411764705882355, 0.4980392156862745, 0.5019607843137255, 0.5058823529411764, 0.5098039215686274, 0.5137254901960784, 0.5176470588235295, 0.5215686274509804, 0.5254901960784314, 0.5294117647058824, 0.5333333333333333, 0.5372549019607843, 0.5411764705882353, 0.5450980392156862, 0.5490196078431373, 0.5529411764705883, 0.5568627450980392, 0.5607843137254902, 0.5647058823529412, 0.5686274509803921, 0.5725490196078431, 0.5764705882352941, 0.5803921568627451, 0.5843137254901961, 0.5882352941176471, 0.592156862745098, 0.596078431372549, 0.6, 0.6039215686274509, 0.6078431372549019, 0.611764705882353, 0.615686274509804, 0.6196078431372549, 0.6235294117647059, 0.6274509803921569, 0.6313725490196078, 0.6352941176470588, 0.6392156862745098, 0.6431372549019608, 0.6470588235294118, 0.6509803921568628, 0.6549019607843137, 0.6588235294117647, 0.6627450980392157, 0.6666666666666666, 0.6705882352941176, 0.6745098039215687, 0.6784313725490196, 0.6823529411764706, 0.6862745098039216, 0.6901960784313725, 0.6941176470588235, 0.6980392156862745, 0.7019607843137254, 0.7058823529411765, 0.7098039215686275, 0.7137254901960784, 0.7176470588235294, 0.7215686274509804, 0.7254901960784313, 0.7294117647058823, 0.7333333333333333, 0.7372549019607844, 0.7411764705882353, 0.7450980392156863, 0.7490196078431373, 0.7529411764705882, 0.7568627450980392, 0.7607843137254902, 0.7647058823529411, 0.7686274509803922, 0.7725490196078432, 0.7764705882352941, 0.7803921568627451, 0.7843137254901961, 0.788235294117647, 0.792156862745098, 0.796078431372549, 0.8, 0.803921568627451, 0.807843137254902, 0.8117647058823529, 0.8156862745098039, 0.8196078431372549, 0.8235294117647058, 0.8274509803921568, 0.8313725490196079, 0.8352941176470589, 0.8392156862745098, 0.8431372549019608, 0.8470588235294118, 0.8509803921568627, 0.8549019607843137, 0.8588235294117647, 0.8627450980392157, 0.8666666666666667, 0.8705882352941177, 0.8745098039215686, 0.8784313725490196, 0.8823529411764706, 0.8862745098039215, 0.8901960784313725, 0.8941176470588236, 0.8980392156862745, 0.9019607843137255, 0.9058823529411765, 0.9098039215686274, 0.9137254901960784, 0.9176470588235294, 0.9215686274509803, 0.9254901960784314, 0.9294117647058824, 0.9333333333333333, 0.9372549019607843, 0.9411764705882353, 0.9450980392156862, 0.9490196078431372, 0.9529411764705882, 0.9568627450980393, 0.9607843137254902, 0.9647058823529412, 0.9686274509803922, 0.9725490196078431, 0.9764705882352941, 0.9803921568627451, 0.984313725490196, 0.9882352941176471, 0.9921568627450981, 0.996078431372549, 1.];
const SRGB_BYTE_TO_RGB_FLOAT: [f32; 256] = [0.0, 0.000303527, 0.000607054, 0.000910581, 0.001214108, 0.001517635, 0.001821162, 0.0021246888, 0.002428216, 0.002731743, 0.00303527, 0.0033465356, 0.003676507, 0.004024717, 0.004391442, 0.0047769533, 0.005181517, 0.0056053917, 0.0060488326, 0.006512091, 0.00699541, 0.0074990317, 0.008023192, 0.008568125, 0.009134057, 0.009721218, 0.010329823, 0.010960094, 0.011612245, 0.012286487, 0.012983031, 0.013702081, 0.014443844, 0.015208514, 0.015996292, 0.016807375, 0.017641952, 0.018500218, 0.019382361, 0.020288562, 0.02121901, 0.022173883, 0.023153365, 0.02415763, 0.025186857, 0.026241222, 0.027320892, 0.028426038, 0.029556833, 0.03071344, 0.03189603, 0.033104762, 0.034339808, 0.035601314, 0.036889445, 0.038204364, 0.039546236, 0.0409152, 0.04231141, 0.043735027, 0.045186203, 0.046665084, 0.048171822, 0.049706563, 0.051269468, 0.052860655, 0.05448028, 0.056128494, 0.057805434, 0.05951124, 0.06124607, 0.06301003, 0.06480328, 0.06662595, 0.06847818, 0.07036011, 0.07227186, 0.07421358, 0.07618539, 0.07818743, 0.08021983, 0.082282715, 0.084376216, 0.086500466, 0.088655606, 0.09084173, 0.09305898, 0.095307484, 0.09758736, 0.09989874, 0.10224175, 0.10461649, 0.10702311, 0.10946172, 0.111932434, 0.11443538, 0.11697067, 0.119538434, 0.1221388, 0.12477184, 0.1274377, 0.13013649, 0.13286833, 0.13563335, 0.13843162, 0.1412633, 0.14412849, 0.14702728, 0.1499598, 0.15292616, 0.15592647, 0.15896086, 0.1620294, 0.16513222, 0.1682694, 0.1714411, 0.17464739, 0.17788841, 0.18116423, 0.18447499, 0.18782076, 0.19120167, 0.19461781, 0.1980693, 0.20155624, 0.2050787, 0.20863685, 0.21223073, 0.21586053, 0.21952623, 0.22322798, 0.22696589, 0.23074007, 0.23455065, 0.23839766, 0.2422812, 0.2462014, 0.25015837, 0.25415218, 0.2581829, 0.26225072, 0.26635566, 0.27049786, 0.27467737, 0.27889434, 0.2831488, 0.2874409, 0.2917707, 0.29613832, 0.30054384, 0.30498737, 0.30946895, 0.31398875, 0.31854683, 0.32314324, 0.32777813, 0.33245158, 0.33716366, 0.34191445, 0.3467041, 0.3515327, 0.35640025, 0.36130688, 0.3662527, 0.37123778, 0.37626222, 0.3813261, 0.38642952, 0.39157256, 0.3967553, 0.40197787, 0.4072403, 0.4125427, 0.41788515, 0.42326775, 0.42869055, 0.4341537, 0.43965724, 0.44520125, 0.45078585, 0.45641106, 0.46207705, 0.46778384, 0.47353154, 0.47932023, 0.48514998, 0.4910209, 0.49693304, 0.5028866, 0.50888145, 0.5149178, 0.5209957, 0.5271152, 0.5332765, 0.5394796, 0.5457246, 0.5520115, 0.5583405, 0.56471163, 0.5711249, 0.5775805, 0.5840785, 0.5906189, 0.5972019, 0.6038274, 0.6104956, 0.61720663, 0.62396044, 0.6307572, 0.63759696, 0.64447975, 0.6514057, 0.65837485, 0.66538733, 0.6724432, 0.67954254, 0.68668544, 0.6938719, 0.701102, 0.70837593, 0.71569365, 0.72305524, 0.7304609, 0.73791057, 0.74540436, 0.7529423, 0.76052463, 0.7681513, 0.77582234, 0.7835379, 0.79129803, 0.79910284, 0.80695236, 0.8148467, 0.82278585, 0.83076996, 0.8387991, 0.8468733, 0.8549927, 0.8631573, 0.8713672, 0.87962234, 0.8879232, 0.8962694, 0.90466136, 0.9130987, 0.92158204, 0.9301109, 0.9386859, 0.9473066, 0.9559735, 0.9646863, 0.9734455, 0.9822506, 0.9911022, 1.0];

impl Color {
    pub const fn from_rgb(r: f32, g: f32, b: f32) -> Self {
        Self { r, g, b, a: 1. }
    }

    pub const fn from_rgba(r: f32, g: f32, b: f32, a: f32) -> Self {
        Self { r, g, b, a }
    }

    pub const fn from_rgb_u8(r: u8, g: u8, b: u8) -> Self {
        Self {
            r: SRGB_BYTE_TO_RGB_FLOAT[r as usize],
            g: SRGB_BYTE_TO_RGB_FLOAT[g as usize],
            b: SRGB_BYTE_TO_RGB_FLOAT[b as usize],
            a: 1.,
        }
    }

    pub const fn from_rgba_u8(r: u8, g: u8, b: u8, a: u8) -> Self {
        Self {
            r: SRGB_BYTE_TO_RGB_FLOAT[r as usize],
            g: SRGB_BYTE_TO_RGB_FLOAT[g as usize],
            b: SRGB_BYTE_TO_RGB_FLOAT[b as usize],
            a: SRGB_BYTE_TO_RGB_FLOAT[a as usize],
        }
    }

    pub const fn from_rgb_hex(rgb: i32) -> Color {
        Self::from_rgb_u8(
            (rgb >> 16 & 0xff) as _,
            (rgb >> 8 & 0xff) as _,
            (rgb & 0xff) as _,
        )
    }
}

impl From<i32> for Color {
    fn from(rgb: i32) -> Self {
        Color::from_rgb_hex(rgb)
    }
}
